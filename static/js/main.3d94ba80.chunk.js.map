{"version":3,"sources":["constants/currencies.js","components/CurrencyPocketsCarousel/index.jsx","assets/rep.svg","components/ExchangeButton/index.jsx","components/DateComponent/index.jsx","components/TransactionHistoryItem/index.jsx","components/TransactionHistory/index.jsx","views/Pocket/index.jsx","components/ExchangeTopBar/index.jsx","constants/fields.js","components/CurrencyEntry/index.jsx","components/ExchangeCurrencyCarousel/index.jsx","views/CurrencyExchange/index.jsx","redux/selectors/index.js","components/ErrorBoundary/index.jsx","App.js","redux/actionCreators/index.js","constants/actionTypes.js","serviceWorker.js","redux/helpers/index.js","redux/reducers/ratesReducer.js","redux/reducers/pocketReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["currencies","EUR","id","value","GBP","USD","SliderContainer","styled","div","BlockText","span","props","fontSize","weight","CurrencyPocketsCarousel","updateSourceCurrency","pockets","currency","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","swipeToSlide","responsive","breakpoint","afterChange","index","map","pocket","key","symbol","parseInt","balance","toFixed","toString","description","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fillRule","clipRule","d","fill","_ref","svgRef","title","width","height","viewBox","ref","ForwardRef","forwardRef","Footer","FooterLabel","FooterLabelButtonWrapper","ExchangeButton","setExchangeOpenState","className","onClick","DateWrapper","DateComponent","Date","toDateString","Flex","justifyContent","TransactionHistoryItem","history","hasMarginBottom","time","sourceCurrency","sourceAmount","destinationCurrency","destinationAmount","TransactionHistory","transactionHistory","PocketsWrapper","Pocket","Nav","nav","ExchangeTopBar","sourceRate","disableExchangeButton","exhchangeCurrency","disabled","disabledClass","fieldNames","error","loading","rates","SliderWrapper","CurrencyEntry","name","onChange","showExchangeRate","destinationRate","ratesFetched","prefix","type","pattern","placeholder","autoComplete","e","ExchangeCurrencyCarousel","onSlide","recalculateOnSlide","style","marginBottom","CurrencyExchange","checkValueContainsPlusorMinus","stringifiedInputValue","validateInput","test","validateNumber","getInputValue","substring","calculateRate","rate","calculateLiveRates","conversionDirection","setState","forEach","base","derivedDestinationCurrency","find","el","destinationResult","derivedSourceCurrency","sourceResult","firstCharZero","state","handleChange","event","getRates","saveRates","fetch","then","response","json","data","recalculateOnSourceSlide","recalculateOnTargetSlide","hasMoneyInWallet","mainPockets","parseFloat","isInputEmpty","notSameCurrency","handleExchangeCurrency","doExchangeCurrency","updateSourceCurrencySlide","updateDestinationCurrencySlide","sourceConversionRates","destinationConversionRates","React","Component","sourceCurrencySelector","ratesReducer","destinationCurrencySelector","pocketValues","createSelector","pocketsReducer","values","getSourceCurrency","getDestinationCurrency","getSourceConversionRates","filter","getDestinationConversionRates","getTransactionHistory","ErrorBoundary","hasError","errorInfo","console","log","children","Container","Row","direction","connect","dispatch","payload","slideIndex","updateDestinationCurrency","destination","exchangeCurrency","useState","exchangeViewOpen","Boolean","window","location","hostname","match","updateObject","oldObject","newValues","getCurrencyById","initialState","date","fetchRatesStart","fetchRatesError","fetchRatesDone","action","reducer","sourcePocket","destinationPocket","updatedSource","updatedDestination","oldTransactionHistory","incomingTransactionHistory","v4","toLocaleTimeString","rootReducer","combineReducers","store","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d94ba80.chunk.js","sourcesContent":["export const currencies = {\n  EUR: { id: 0, value: \"EUR\" },\n  GBP: { id: 1, value: \"GBP\" },\n  USD: { id: 2, value: \"USD\" }\n};\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { currencies } from \"../../constants/currencies\";\n\nconst SliderContainer = styled.div`\n  color: #fff;\n  min-height: 300px;\n  max-height: 100%;\n  cursor: move;\n  display: flex !important;\n  text-align: center !important;\n  flex-direction: column !important;\n  justify-content: center !important;\n`;\n\nconst BlockText = styled.span`\n  font-size: ${props => props.fontSize};\n  display: block;\n  weight: ${props => props.weight};\n`;\n\nfunction CurrencyPocketsCarousel({ updateSourceCurrency, pockets, currency }) {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: currencies[currency].id,\n    swipeToSlide: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  const handleSlide = index => {\n    updateSourceCurrency(index);\n  };\n\n  return (\n    <>\n      <Slider afterChange={handleSlide} {...settings}>\n        {pockets.map(pocket => (\n          <SliderContainer key={pocket.id}>\n            <div>\n              <BlockText weight=\"bold\" fontSize=\"32px\">\n                {`${pocket.symbol} ${parseInt(pocket.balance)\n                  .toFixed(2)\n                  .toString()}`}\n              </BlockText>\n              <BlockText weight=\"normal\" fontSize=\"16px\">\n                {`${pocket.currency} - ${pocket.description}`}\n              </BlockText>\n            </div>\n          </SliderContainer>\n        ))}\n      </Slider>\n    </>\n  );\n}\n\nexport default CurrencyPocketsCarousel;\n\nCurrencyPocketsCarousel.propTypes = {\n  updateSourceCurrency: PropTypes.func.isRequired,\n  pockets: PropTypes.array.isRequired,\n  currency: PropTypes.string.isRequired\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M22.1823 51.7755C31.9208 56.2262 43.6619 52.5689 49.1615 43.0433C52.7523 36.824 52.9279 29.3476 49.839 23.081C49.732 22.864 49.806 23.0149 49.806 23.0149C49.6405 22.6943 49.2438 22.5773 48.9193 22.7539L45.4589 24.6379C45.1347 24.8144 45.0062 25.2163 45.1633 25.5279C45.1633 25.5279 45.0702 25.3362 45.1633 25.5279C47.4393 30.2147 47.293 35.7796 44.6149 40.4183C40.5701 47.4241 32.0239 50.1976 24.8067 47.1546C24.6063 47.0701 24.8067 47.1546 24.8067 47.1546C24.4765 47.0072 24.353 46.638 24.5399 46.3143L25.5572 44.5522C25.9197 43.9243 25.6241 43.4743 24.8999 43.5469L16.2667 44.4127C15.5411 44.4855 15.1965 45.0846 15.4957 45.7481L19.0625 53.6575C19.3623 54.3223 19.902 54.3473 20.2666 53.7158L21.2273 52.0519C21.4103 51.7349 21.8168 51.6028 22.1621 51.7662C22.1621 51.7662 21.9735 51.68 22.1823 51.7755ZM39.8167 13.224C30.0787 8.77352 18.3381 12.4311 12.8385 21.9567C9.24773 28.176 9.07192 35.6523 12.1606 41.9187C12.2675 42.1357 12.1935 41.9848 12.1935 41.9848C12.359 42.3054 12.7556 42.4224 13.0801 42.2458L16.5405 40.3617C16.8646 40.1853 16.9932 39.7834 16.8361 39.4718C16.8361 39.4718 16.9291 39.6634 16.8361 39.4718C14.5603 34.785 14.7067 29.2202 17.3848 24.5816C21.4296 17.5758 29.9756 14.8021 37.1924 17.8448C37.3927 17.9293 37.1924 17.8448 37.1924 17.8448C37.5225 17.9922 37.646 18.3614 37.4591 18.6851L36.4418 20.4472C36.0792 21.0752 36.3749 21.5251 37.0991 21.4524L45.7319 20.5865C46.4575 20.5137 46.8021 19.9146 46.5029 19.2511L42.9364 11.3419C42.6367 10.6771 42.097 10.6521 41.7324 11.2837L40.7717 12.9476C40.5887 13.2645 40.1822 13.3967 39.8369 13.2332C39.8369 13.2332 40.0256 13.3194 39.8167 13.224Z\",\n  fill: \"white\"\n});\n\nvar SvgRep = function SvgRep(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 62,\n    height: 65,\n    viewBox: \"0 0 62 65\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRep, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/rep.9be71f7b.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { ReactComponent as RepeatIcon } from \"../../assets/rep.svg\";\n\nconst Footer = styled.div`\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding-bottom: 0.5rem !important;\n  height: 100%;\n`;\n\nconst FooterLabel = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst FooterLabelButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .exchange-icon {\n    display: block;\n    cursor: pointer;\n    flex-shrink: 0;\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    appearance: none;\n    box-shadow: none;\n    outline: none !important;\n  }\n\n  .exchange-icon svg {\n    max-width: 100%;\n    max-height: 100%;\n    width: 100%;\n    height: 100%;\n  }\n  .exchange-icon-white {\n    background: transparent;\n    border: 0.5px solid rgba(255, 255, 255, 0.3);\n  }\n  .text {\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.7);\n  }\n`;\n\nfunction ExchangeButton({ setExchangeOpenState }) {\n  return (\n    <Footer>\n      <FooterLabel>\n        <FooterLabelButtonWrapper>\n          <button\n            className=\"exchange-icon exchange-icon-white\"\n            onClick={() => setExchangeOpenState(true)}\n          >\n            <RepeatIcon />\n          </button>\n          <span className=\"text\">Exchange</span>\n        </FooterLabelButtonWrapper>\n      </FooterLabel>\n    </Footer>\n  );\n}\n\nexport default ExchangeButton;\n\nExchangeButton.propTypes = {\n  setExchangeOpenState: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DateWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n\n  .text-muted {\n    color: rgba(0, 0, 0, 0.5);\n  }\n`;\n\nfunction DateComponent() {\n  return (\n    <DateWrapper>\n      <span className=\"text-muted\">{new Date().toDateString()}</span>\n    </DateWrapper>\n  );\n}\n\nexport default DateComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { ReactComponent as RepeatIcon } from \"../../assets/rep.svg\";\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: ${props =>\n    props.justifyContent ? props.justifyContent : \"flex-start\"};\n\n  .exchange-icon {\n    display: block;\n\n    flex-shrink: 0;\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    display: flex;\n  }\n\n  .exchange-icon svg {\n    max-width: 100%;\n    max-height: 100%;\n    width: 100%;\n    height: 100%;\n  }\n\n  .exchange-icon-dark {\n    background: rgba(0, 0, 0, 0.57);\n  }\n`;\n\nfunction TransactionHistoryItem({ history, hasMarginBottom }) {\n  return (\n    <div className={`${hasMarginBottom}`}>\n      <Flex justifyContent=\"space-between\">\n        <Flex>\n          <i className=\"exchange-icon exchange-icon-dark\">\n            <RepeatIcon />\n          </i>\n          <div className=\"text-left ml-3\">\n            <span className=\"d-block\">{history.description}</span>\n            <span className=\"d-block text-muted\">{history.time}</span>\n          </div>\n        </Flex>\n        <div className=\"text-right\">\n          <span className=\"d-block\">\n            -{history.sourceCurrency} {history.sourceAmount}\n          </span>\n          <span className=\"d-block text-primary\">\n            +{history.destinationCurrency} {history.destinationAmount}\n          </span>\n        </div>\n      </Flex>\n    </div>\n  );\n}\n\nexport default TransactionHistoryItem;\n\nTransactionHistoryItem.propTypes = {\n  history: PropTypes.object,\n  hasMarginBottom: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DateComponent from \"../DateComponent\";\nimport TransactionHistoryItem from \"../TransactionHistoryItem\";\n\nfunction TransactionHistory({ transactionHistory }) {\n  const hasMarginBottom = transactionHistory.length > 1 ? \"mb-2\" : \"mb-0\";\n  return (\n    <>\n      <DateComponent />\n      {transactionHistory.map(history => (\n        <TransactionHistoryItem\n          key={history.id}\n          history={history}\n          hasMarginBottom={hasMarginBottom}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  transactionHistory: PropTypes.array\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport CurrencyPocketsCarousel from \"../../components/CurrencyPocketsCarousel\";\nimport ExchangeButton from \"../../components/ExchangeButton\";\nimport TransactionHistory from \"../../components/TransactionHistory\";\n\nconst PocketsWrapper = styled.div`\n  background: rgb(48, 116, 234);\n  background: -moz-linear-gradient(\n    32deg,\n    rgba(48, 116, 234, 1) 0%,\n    rgba(48, 116, 234, 1) 70%,\n    rgba(204, 0, 255, 1) 100%\n  );\n  background: -webkit-linear-gradient(\n    32deg,\n    rgba(48, 116, 234, 1) 0%,\n    rgba(48, 116, 234, 1) 70%,\n    rgba(204, 0, 255, 1) 100%\n  );\n  background: linear-gradient(\n    32deg,\n    rgba(48, 116, 234, 1) 0%,\n    rgba(48, 116, 234, 1) 70%,\n    rgba(204, 0, 255, 1) 100%\n  );\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#3074ea\",endColorstr=\"#cc00ff\",GradientType=1);\n  height: 450px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction Pocket({\n  setExchangeOpenState,\n  updateSourceCurrency,\n  pockets,\n  sourceCurrency,\n  transactionHistory\n}) {\n  return (\n    <>\n      <PocketsWrapper>\n        <CurrencyPocketsCarousel\n          updateSourceCurrency={updateSourceCurrency}\n          pockets={pockets}\n          currency={sourceCurrency}\n        />\n        <ExchangeButton setExchangeOpenState={setExchangeOpenState} />\n      </PocketsWrapper>\n      {transactionHistory.length > 0 && (\n        <div className=\"p-3\">\n          <TransactionHistory transactionHistory={transactionHistory} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Pocket;\n\nPocket.propTypes = {\n  setExchangeOpenState: PropTypes.func.isRequired,\n  updateSourceCurrency: PropTypes.func.isRequired,\n  pockets: PropTypes.array.isRequired,\n  sourceCurrency: PropTypes.string.isRequired,\n  transactionHistory: PropTypes.array\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n\n  .text-btn {\n    appearance: none;\n    background: none;\n    border: none;\n    outline: none !important;\n    font-size: 13px;\n    text-transform: uppercase;\n  }\n\n  .exchange-rate {\n    font-size: 11px;\n  }\n`;\n\nfunction ExchangeTopBar({\n  setExchangeOpenState,\n  sourceRate,\n  disableExchangeButton,\n  exhchangeCurrency\n}) {\n  const disabled = disableExchangeButton();\n  const disabledClass = disabled ? \"text-muted\" : \"text-primary\";\n  return (\n    <Nav>\n      <button\n        className=\"text-btn text-muted\"\n        onClick={() => setExchangeOpenState(false)}\n      >\n        Cancel\n      </button>\n      <div className=\"border rounded px-1\">\n        <span className=\"font-weight-bold exchange-rate\">{sourceRate}</span>\n      </div>\n      <button\n        className={`text-btn ${disabledClass}`}\n        disabled={disabled}\n        onClick={exhchangeCurrency}\n      >\n        Exchange\n      </button>\n    </Nav>\n  );\n}\n\nexport default ExchangeTopBar;\n\nExchangeTopBar.propTypes = {\n  setExchangeOpenState: PropTypes.func.isRequired,\n  sourceRate: PropTypes.string,\n  disableExchangeButton: PropTypes.func.isRequired,\n  exhchangeCurrency: PropTypes.func.isRequired\n};\n","export const fieldNames = {\n  sourceCurrency: \"sourceCurrency\",\n  destinationCurrency: \"destinationCurrency\",\n  sourceAmount: \"sourceAmount\",\n  destinationAmount: \"destinationAmount\",\n  balance: \"balance\",\n  symbol: \"symbol\",\n  description: \"description\",\n  currency: \"currency\",\n  id: \"id\",\n  error: \"error\",\n  loading: \"loading\",\n  rates: \"rates\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { fieldNames } from \"../../constants/fields\";\n\nconst SliderWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  min-height: 200px;\n  max-height: 100%;\n  padding: 16px;\n  cursor: move;\n\n  .balance {\n    min-width: 100px;\n    max-width: 100%;\n  }\n\n  .currency {\n    font-size: 24px;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .currency-input {\n    text-align: right;\n    box-shadow: none;\n    font-size: 18px;\n    padding: 20px;\n    width: 230px;\n    outline: none !important;\n    border: none;\n  }\n\n  .currency-input:focus {\n    box-shadow: none;\n  }\n`;\n\nfunction CurrencyEntry({\n  name,\n  onChange,\n  value,\n  balance,\n  currency,\n  symbol,\n  showExchangeRate,\n  destinationRate,\n  ratesFetched\n}) {\n  const prefix = name === fieldNames.sourceAmount ? \"-\" : \"+\";\n\n  const disabled = ratesFetched();\n  return (\n    <SliderWrapper>\n      <div className=\"d-flex flex-column balance\">\n        <h2 className=\"currency\">{currency}</h2>\n        <small className=\"text-muted\">\n          You have {symbol} {parseInt(balance).toString()}\n        </small>\n      </div>\n      <div className=\"d-flex flex-column justify-content-end\">\n        <input\n          type=\"text\"\n          pattern=\"[0-9]*\"\n          placeholder=\"0\"\n          autoComplete=\"off\"\n          className=\"currency-input\"\n          name={name}\n          value={value ? prefix + value : value}\n          onChange={e => onChange(e)}\n          disabled={disabled}\n        />\n        {showExchangeRate && (\n          <small className=\"font-weight-bold text-right\">\n            {destinationRate}\n          </small>\n        )}\n      </div>\n    </SliderWrapper>\n  );\n}\n\nexport default CurrencyEntry;\n\nCurrencyEntry.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  balance: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  showExchangeRate: PropTypes.bool.isRequired,\n  destinationRate: PropTypes.string,\n  ratesFetched: PropTypes.func\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport CurrencyEntry from \"../CurrencyEntry\";\nimport { currencies } from \"../../constants/currencies\";\n\nfunction ExchangeCurrencyCarousel(props) {\n  const {\n    currency,\n    pockets,\n    name,\n    value,\n    onChange,\n    onSlide,\n    showExchangeRate,\n    destinationRate,\n    recalculateOnSlide,\n    ratesFetched\n  } = props;\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: currencies[currency].id,\n    swipeToSlide: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  const handleSlide = index => {\n    recalculateOnSlide();\n    onSlide(index);\n  };\n\n  return (\n    <Slider\n      afterChange={handleSlide}\n      {...settings}\n      style={{ marginBottom: \"30px\" }}\n    >\n      {pockets.map(pocket => (\n        <CurrencyEntry\n          key={pocket.id}\n          id={pocket.id}\n          currency={pocket.currency}\n          balance={pocket.balance}\n          symbol={pocket.symbol}\n          name={name}\n          value={value}\n          onChange={onChange}\n          showExchangeRate={showExchangeRate}\n          destinationRate={destinationRate}\n          ratesFetched={ratesFetched}\n        />\n      ))}\n    </Slider>\n  );\n}\n\nexport default ExchangeCurrencyCarousel;\n\nExchangeCurrencyCarousel.propTypes = {\n  currency: PropTypes.string.isRequired,\n  pockets: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onSlide: PropTypes.func.isRequired,\n  showExchangeRate: PropTypes.bool.isRequired,\n  destinationRate: PropTypes.string,\n  recalculateOnSlide: PropTypes.func.isRequired,\n  ratesFetched: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExchangeTopBar from \"../../components/ExchangeTopBar\";\nimport ExchangeCurrencyCarousel from \"../../components/ExchangeCurrencyCarousel\";\nimport { fieldNames } from \"../../constants/fields\";\n\nclass CurrencyExchange extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      [fieldNames.sourceAmount]: \"\",\n      [fieldNames.destinationAmount]: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // this.getRates();\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.getRatesIntervalId);\n  }\n\n  checkValueContainsPlusorMinus = value => {\n    const stringifiedInputValue = value.toString();\n    return (\n      stringifiedInputValue.indexOf(\"+\") !== -1 ||\n      stringifiedInputValue.indexOf(\"-\") !== -1\n    );\n  };\n\n  validateInput = value => {\n    const stringifiedInputValue = value.toString();\n    return (\n      stringifiedInputValue === \"\" ||\n      /^[0-9]+$/.test(stringifiedInputValue) ||\n      /^[0-9]*[.]$/.test(stringifiedInputValue) ||\n      /^[0-9]*[.][0-9]{1,2}$/.test(stringifiedInputValue)\n    );\n  };\n\n  validateNumber = value => {\n    return /^[0-9]+$/.test(value);\n  };\n\n  getInputValue = value => {\n    const stringifiedInputValue = value.toString();\n    if (this.checkValueContainsPlusorMinus(value)) {\n      if (stringifiedInputValue.length > 1) {\n        return stringifiedInputValue.substring(1);\n      }\n      return \"\";\n    } else {\n      return stringifiedInputValue;\n    }\n  };\n\n  calculateRate = (rate, destinationCurrency, sourceCurrency, value) => {\n    if (sourceCurrency !== destinationCurrency) {\n      return rate * value;\n    } else {\n      return value;\n    }\n  };\n\n  calculateLiveRates = (conversionDirection, value) => {\n    const { rates, sourceCurrency, destinationCurrency } = this.props;\n\n    if (value === \"\") {\n      this.setState({\n        [fieldNames.sourceAmount]: \"\",\n        [fieldNames.destinationAmount]: \"\"\n      });\n    } else {\n      if (conversionDirection === fieldNames.sourceAmount) {\n        if (sourceCurrency === destinationCurrency) {\n          this.setState({\n            [fieldNames.destinationAmount]: value\n          });\n        } else {\n          // Multiply by target rate\n          rates.forEach(rate => {\n            if (rate.base === sourceCurrency) {\n              const derivedDestinationCurrency = Object.keys(rate.rates).find(\n                el => el === destinationCurrency\n              );\n\n              const destinationResult = this.calculateRate(\n                rate.rates[derivedDestinationCurrency],\n                derivedDestinationCurrency,\n                sourceCurrency,\n                value\n              );\n\n              this.setState({\n                [fieldNames.destinationAmount]: destinationResult\n                  .toFixed(2)\n                  .toString()\n              });\n            }\n          });\n        }\n      }\n\n      if (conversionDirection === fieldNames.destinationAmount) {\n        if (sourceCurrency === destinationCurrency) {\n          this.setState({\n            [fieldNames.destinationAmount]: value\n          });\n        } else {\n          rates.forEach(rate => {\n            if (rate.base === destinationCurrency) {\n              const derivedSourceCurrency = Object.keys(rate.rates).find(\n                el => el === sourceCurrency\n              );\n\n              const sourceResult = this.calculateRate(\n                rate.rates[derivedSourceCurrency],\n                destinationCurrency,\n                derivedSourceCurrency,\n                value\n              );\n\n              this.setState({\n                [fieldNames.sourceAmount]: sourceResult.toFixed(2).toString()\n              });\n            }\n          });\n        }\n      }\n    }\n  };\n\n  firstCharZero = value => {\n    return this.state.sourceAmount.length === 0 && value === \"0\";\n  };\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = this.getInputValue(event.target.value);\n\n    if (this.firstCharZero(value)) {\n      return;\n    }\n\n    if (this.validateInput(value)) {\n      this.setState({ [name]: value !== \"\" ? value : \"\" });\n      this.calculateLiveRates(name, value);\n    }\n  };\n\n  getRates = () => {\n    const { saveRates } = this.props;\n    // Prefetch rates for all currencies\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=USD&symbols=EUR,GBP\"\n    ).then(response => {\n      response.json().then(data => {\n        saveRates(data);\n      });\n    });\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=GBP&symbols=EUR,USD\"\n    ).then(response => {\n      response.json().then(data => {\n        saveRates(data);\n      });\n    });\n    fetch(\n      \"https://api.exchangeratesapi.io/latest?base=EUR&symbols=USD,GBP\"\n    ).then(response => {\n      response.json().then(data => {\n        saveRates(data);\n      });\n    });\n  };\n\n  recalculateOnSlide = conversionDirection => {\n    const value =\n      conversionDirection === fieldNames.sourceAmount\n        ? this.state[fieldNames.sourceAmount]\n        : this.state[fieldNames.destinationAmount];\n\n    this.calculateLiveRates(conversionDirection, value);\n  };\n\n  recalculateOnSourceSlide = () =>\n    this.recalculateOnSlide(fieldNames.sourceAmount);\n\n  recalculateOnTargetSlide = () =>\n    this.recalculateOnSlide(fieldNames.destinationAmount);\n\n  hasMoneyInWallet = () => {\n    const { sourceAmount } = this.state;\n    const { mainPockets, sourceCurrency } = this.props;\n\n    return (\n      parseFloat(mainPockets[sourceCurrency].balance.toFixed(2)) >= sourceAmount\n    );\n  };\n\n  isInputEmpty = () => {\n    const { sourceAmount } = this.state;\n    return (\n      sourceAmount !== \"\" &&\n      sourceAmount !== \"0\" &&\n      sourceAmount !== \"0.00\" &&\n      sourceAmount !== \"0.01\"\n    );\n  };\n\n  notSameCurrency = () => {\n    const { sourceCurrency, destinationCurrency } = this.props;\n    return sourceCurrency !== destinationCurrency;\n  };\n\n  disableExchangeButton = () => {\n    return !(\n      this.isInputEmpty() &&\n      this.hasMoneyInWallet() &&\n      this.notSameCurrency()\n    );\n  };\n\n  handleExchangeCurrency = () => {\n    const {\n      doExchangeCurrency,\n      sourceCurrency,\n      destinationCurrency,\n      setExchangeOpenState\n    } = this.props;\n    const { sourceAmount, destinationAmount } = this.state;\n    doExchangeCurrency(\n      sourceAmount,\n      destinationAmount,\n      sourceCurrency,\n      destinationCurrency\n    );\n\n    this.setState({\n      [fieldNames.sourceAmount]: \"\",\n      [fieldNames.destinationAmount]: \"\"\n    });\n\n    setExchangeOpenState(false);\n  };\n\n  ratesFetched = () => {\n    const { rates } = this.props;\n    return !(rates.length > 0);\n  };\n\n  render() {\n    const {\n      setExchangeOpenState,\n      sourceCurrency,\n      destinationCurrency,\n      pockets,\n      updateSourceCurrencySlide,\n      updateDestinationCurrencySlide,\n      sourceConversionRates,\n      destinationConversionRates\n    } = this.props;\n    const { sourceAmount, destinationAmount } = this.state;\n\n    let sourceRate = \"\";\n    let destinationRate = \"\";\n\n    if (sourceConversionRates) {\n      sourceRate = `1 ${sourceCurrency} = ${parseFloat(sourceConversionRates)\n        .toFixed(2)\n        .toString()} ${destinationCurrency}`;\n    }\n\n    if (destinationConversionRates) {\n      destinationRate = `1 ${destinationCurrency} = ${parseFloat(\n        destinationConversionRates\n      )\n        .toFixed(2)\n        .toString()} ${sourceCurrency}`;\n    }\n\n    if (sourceCurrency === destinationCurrency) {\n      sourceRate = `1 ${sourceCurrency} = 1 ${destinationCurrency}`;\n      destinationRate = `1 ${sourceCurrency} = 1 ${destinationCurrency}`;\n    }\n\n    return (\n      <>\n        <ExchangeTopBar\n          setExchangeOpenState={setExchangeOpenState}\n          sourceRate={sourceRate}\n          disableExchangeButton={this.disableExchangeButton}\n          exhchangeCurrency={this.handleExchangeCurrency}\n        />\n        <ExchangeCurrencyCarousel\n          name={fieldNames.sourceAmount}\n          value={sourceAmount}\n          onChange={this.handleChange}\n          currency={sourceCurrency}\n          pockets={pockets}\n          onSlide={updateSourceCurrencySlide}\n          recalculateOnSlide={this.recalculateOnSourceSlide}\n          showExchangeRate={false}\n          ratesFetched={this.ratesFetched}\n        />\n        <hr />\n        <ExchangeCurrencyCarousel\n          name={fieldNames.destinationAmount}\n          value={destinationAmount}\n          onChange={this.handleChange}\n          currency={destinationCurrency}\n          pockets={pockets}\n          onSlide={updateDestinationCurrencySlide}\n          showExchangeRate={true}\n          destinationRate={destinationRate}\n          recalculateOnSlide={this.recalculateOnTargetSlide}\n          ratesFetched={this.ratesFetched}\n        />\n      </>\n    );\n  }\n}\n\nexport default CurrencyExchange;\n\nCurrencyExchange.propTypes = {\n  setExchangeOpenState: PropTypes.func.isRequired,\n  saveRates: PropTypes.func.isRequired,\n  sourceCurrency: PropTypes.string.isRequired,\n  destinationCurrency: PropTypes.string.isRequired,\n  pockets: PropTypes.array.isRequired,\n  rates: PropTypes.array.isRequired,\n  updateSourceCurrencySlide: PropTypes.func.isRequired,\n  updateDestinationCurrencySlide: PropTypes.func.isRequired,\n  sourceConversionRates: PropTypes.number,\n  destinationConversionRates: PropTypes.number,\n  doExchangeCurrency: PropTypes.func.isRequired,\n  mainPockets: PropTypes.object.isRequired\n};\n","import { createSelector } from \"reselect\";\n\nconst pocketsSelector = state => state.pocketsReducer.pockets;\nconst ratesSelector = state => state.ratesReducer;\nconst sourceCurrencySelector = state => state.ratesReducer.sourceCurrency;\nconst destinationCurrencySelector = state =>\n  state.ratesReducer.destinationCurrency;\n\nconst transactionHistorySelector = state =>\n  state.pocketsReducer.transactionHistory;\n\nexport const pocketValues = createSelector([pocketsSelector], pockets => {\n  return Object.values(pockets);\n});\n\nexport const getSourceCurrency = createSelector(\n  [sourceCurrencySelector],\n  sourceCurrency => {\n    return sourceCurrency;\n  }\n);\n\nexport const getDestinationCurrency = createSelector(\n  [destinationCurrencySelector],\n  destinationCurrency => {\n    return destinationCurrency;\n  }\n);\n\nexport const getRates = createSelector([ratesSelector], data => {\n  return data.rates;\n});\n\nexport const getSourceConversionRates = createSelector(\n  [getRates, sourceCurrencySelector, destinationCurrencySelector],\n  (rates, sourceCurrency, destinationCurrency) => {\n    if (rates.filter(rate => rate.base === sourceCurrency).length > 0) {\n      return rates.filter(rate => rate.base === sourceCurrency)[0].rates[\n        destinationCurrency\n      ];\n    }\n  }\n);\n\nexport const getDestinationConversionRates = createSelector(\n  [getRates, sourceCurrencySelector, destinationCurrencySelector],\n  (rates, sourceCurrency, destinationCurrency) => {\n    if (rates.filter(rate => rate.base === destinationCurrency).length > 0) {\n      return rates.filter(rate => rate.base === destinationCurrency)[0].rates[\n        sourceCurrency\n      ];\n    }\n  }\n);\n\nexport const getTransactionHistory = createSelector(\n  [transactionHistorySelector],\n  transactionHistory => {\n    return transactionHistory;\n  }\n);\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(\"Error\");\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Pocket from \"./views/Pocket\";\nimport CurrencyExchange from \"./views/CurrencyExchange\";\nimport {\n  saveRates,\n  updateSourceCurrency,\n  updateDestinationCurrency,\n  exchangeCurrency\n} from \"./redux/actionCreators\";\nimport {\n  pocketValues,\n  getSourceCurrency,\n  getDestinationCurrency,\n  getRates,\n  getSourceConversionRates,\n  getDestinationConversionRates,\n  getTransactionHistory\n} from \"./redux/selectors\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: ${props => (props.direction === \"column\" ? \"column\" : \"row\")}\n  margin-right: -15px;\n  margin-left: -15px;\n  justify-content: ${props => props.justifyContent};\n`;\n\nfunction App({\n  saveRates,\n  updateSourceCurrencySlide,\n  updateDestinationCurrencySlide,\n  pocketValues,\n  sourceCurrency,\n  destinationCurrency,\n  rates,\n  sourceConversionRates,\n  destinationConversionRates,\n  doExchangeCurrency,\n  pockets,\n  transactionHistory\n}) {\n  const [exchangeViewOpen, setExchangeOpenState] = useState(false);\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        <Row justifyContent=\"center\">\n          <div className=\"col-12 col-md-5\">\n            <div className=\"w-100 border rounded\">\n              {exchangeViewOpen ? (\n                <CurrencyExchange\n                  setExchangeOpenState={setExchangeOpenState}\n                  saveRates={saveRates}\n                  sourceCurrency={sourceCurrency}\n                  destinationCurrency={destinationCurrency}\n                  pockets={pocketValues}\n                  mainPockets={pockets}\n                  rates={rates}\n                  updateSourceCurrencySlide={updateSourceCurrencySlide}\n                  updateDestinationCurrencySlide={\n                    updateDestinationCurrencySlide\n                  }\n                  sourceConversionRates={sourceConversionRates}\n                  destinationConversionRates={destinationConversionRates}\n                  doExchangeCurrency={doExchangeCurrency}\n                />\n              ) : (\n                <Pocket\n                  setExchangeOpenState={setExchangeOpenState}\n                  updateSourceCurrency={updateSourceCurrencySlide}\n                  pockets={pocketValues}\n                  sourceCurrency={sourceCurrency}\n                  transactionHistory={transactionHistory}\n                />\n              )}\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </ErrorBoundary>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    sourceCurrency: getSourceCurrency(state),\n    destinationCurrency: getDestinationCurrency(state),\n    rates: getRates(state),\n    pocketValues: pocketValues(state),\n    pockets: state.pocketsReducer.pockets,\n    sourceConversionRates: getSourceConversionRates(state),\n    destinationConversionRates: getDestinationConversionRates(state),\n    transactionHistory: getTransactionHistory(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveRates: rates => dispatch(saveRates(rates)),\n    updateSourceCurrencySlide: slideIndex =>\n      dispatch(updateSourceCurrency(slideIndex)),\n    updateDestinationCurrencySlide: slideIndex =>\n      dispatch(updateDestinationCurrency(slideIndex)),\n    doExchangeCurrency: (\n      source,\n      destination,\n      sourceCurrency,\n      destinationCurrency\n    ) =>\n      dispatch(\n        exchangeCurrency(\n          source,\n          destination,\n          sourceCurrency,\n          destinationCurrency\n        )\n      )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  saveRates: PropTypes.func.isRequired,\n  updateSourceCurrencySlide: PropTypes.func.isRequired,\n  updateDestinationCurrencySlide: PropTypes.func.isRequired,\n  pocketValues: PropTypes.array.isRequired,\n  sourceCurrency: PropTypes.string.isRequired,\n  destinationCurrency: PropTypes.string.isRequired,\n  rates: PropTypes.array.isRequired,\n  sourceConversionRates: PropTypes.number,\n  destinationConversionRates: PropTypes.number,\n  doExchangeCurrency: PropTypes.func.isRequired,\n  pockets: PropTypes.object.isRequired,\n  transactionHistory: PropTypes.array\n};\n","import * as types from \"../../constants/actionTypes\";\n\nexport const saveRates = rates => {\n  return { type: types.FETCH_RATES_DONE, payload: rates };\n};\n\nexport const updateSourceCurrency = slideIndex => {\n  return { type: types.UPDATE_SOURCE_CURRENCY, payload: slideIndex };\n};\n\nexport const updateDestinationCurrency = slideIndex => {\n  return { type: types.UPDATE_DESTINATION_CURRENCY, payload: slideIndex };\n};\n\nexport const exchangeCurrency = (\n  sourceAmount,\n  destinationAmount,\n  sourceCurrency,\n  destinationCurrency\n) => {\n  return {\n    type: types.EXCHANGE_CURRENCY,\n    payload: {\n      sourceAmount,\n      destinationAmount,\n      sourceCurrency,\n      destinationCurrency\n    }\n  };\n};\n","export const FETCH_RATES_START = \"FETCH_RATES_START\";\nexport const FETCH_RATES_ERROR = \"FETCH_RATES_ERROR\";\nexport const FETCH_RATES_DONE = \"FETCH_RATES_DONE\";\nexport const UPDATE_SOURCE_CURRENCY = \"UPDATE_SOURCE_CURRENCY\";\nexport const UPDATE_DESTINATION_CURRENCY = \"UPDATE_DESTINATION_CURRENCY\";\nexport const EXCHANGE_CURRENCY = \"EXCHANGE_CURRENCY\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { currencies } from \"../../constants/currencies\";\n\nexport const updateObject = (oldObject, newValues) => {\n  return Object.assign({}, oldObject, newValues);\n};\n\nexport const getCurrencyById = id => {\n  return Object.values(currencies).find(currency => currency.id === id);\n};\n","import * as types from \"../../constants/actionTypes\";\nimport { updateObject, getCurrencyById } from \"../helpers\";\nimport { fieldNames } from \"../../constants/fields\";\n\nconst initialState = {\n  [fieldNames.rates]: [\n    { rates: { EUR: 1.18, USD: 1.31 }, base: \"GBP\", date: \"2019-12-06\" },\n    { rates: { EUR: 0.9, GBP: 0.76 }, base: \"USD\", date: \"2019-12-06\" },\n    { rates: { USD: 1.11, GBP: 0.84 }, base: \"EUR\", date: \"2019-12-06\" }\n  ],\n  [fieldNames.loading]: false,\n  [fieldNames.error]: null,\n  [fieldNames.sourceCurrency]: \"EUR\",\n  [fieldNames.destinationCurrency]: \"USD\"\n};\n\nconst fetchRatesStart = state => {\n  return updateObject(state, {\n    [fieldNames.loading]: true\n  });\n};\n\nconst fetchRatesError = state => {\n  return updateObject(state, {\n    [fieldNames.loading]: false,\n    [fieldNames.error]: \"Error fetching rates\"\n  });\n};\n\nconst fetchRatesDone = (state, action) => {\n  return updateObject(state, {\n    [fieldNames.loading]: false,\n    [fieldNames.rates]: [...state.rates, ...[action.payload]]\n  });\n};\n\nconst updateSourceCurrency = (state, action) => {\n  const id = action.payload;\n  return updateObject(state, {\n    [fieldNames.sourceCurrency]: getCurrencyById(id).value\n  });\n};\n\nconst updateDestinationCurrency = (state, action) => {\n  const id = action.payload;\n  return updateObject(state, {\n    [fieldNames.destinationCurrency]: getCurrencyById(id).value\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_RATES_START: {\n      return fetchRatesStart(state);\n    }\n    case types.FETCH_RATES_ERROR: {\n      return fetchRatesError(state);\n    }\n    case types.FETCH_RATES_DONE: {\n      return fetchRatesDone(state, action);\n    }\n    case types.UPDATE_SOURCE_CURRENCY: {\n      return updateSourceCurrency(state, action);\n    }\n    case types.UPDATE_DESTINATION_CURRENCY: {\n      return updateDestinationCurrency(state, action);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import v4 from \"uuid/v4\";\nimport * as types from \"../../constants/actionTypes\";\nimport { currencies } from \"../../constants/currencies\";\nimport { fieldNames } from \"../../constants/fields\";\n\nconst initialState = {\n  pockets: {\n    [currencies.EUR.value]: {\n      [fieldNames.id]: currencies.EUR.id,\n      [fieldNames.currency]: currencies.EUR.value,\n      [fieldNames.balance]: 300,\n      [fieldNames.symbol]: \"€\",\n      [fieldNames.description]: \"Euro\"\n    },\n    [currencies.GBP.value]: {\n      [fieldNames.id]: currencies.GBP.id,\n      [fieldNames.currency]: currencies.GBP.value,\n      [fieldNames.balance]: 300,\n      [fieldNames.symbol]: \"£\",\n      [fieldNames.description]: \"British Pound\"\n    },\n    [currencies.USD.value]: {\n      [fieldNames.id]: currencies.USD.id,\n      [fieldNames.currency]: currencies.USD.value,\n      [fieldNames.balance]: 300,\n      [fieldNames.symbol]: \"$\",\n      [fieldNames.description]: \"American Dollar\"\n    }\n  },\n  transactionHistory: []\n};\n\nconst exchangeCurrency = (state, action) => {\n  const sourceAmount = action.payload.sourceAmount;\n  const destinationAmount = action.payload.destinationAmount;\n  const sourceCurrency = action.payload.sourceCurrency;\n  const destinationCurrency = action.payload.destinationCurrency;\n\n  const pockets = state.pockets;\n  const sourcePocket = pockets[sourceCurrency];\n  const destinationPocket = pockets[destinationCurrency];\n\n  const updatedSource = {\n    [sourceCurrency]: {\n      [fieldNames.id]: sourcePocket.id,\n      [fieldNames.currency]: sourceCurrency,\n      [fieldNames.balance]:\n        parseInt(sourcePocket.balance) - parseInt(sourceAmount),\n      [fieldNames.symbol]: sourcePocket.symbol,\n      [fieldNames.description]: sourcePocket.description\n    }\n  };\n\n  const updatedDestination = {\n    [destinationCurrency]: {\n      [fieldNames.id]: destinationPocket.id,\n      [fieldNames.currency]: destinationCurrency,\n      [fieldNames.balance]:\n        parseInt(destinationPocket.balance) + parseInt(destinationAmount),\n      [fieldNames.symbol]: destinationPocket.symbol,\n      [fieldNames.description]: destinationPocket.description\n    }\n  };\n\n  const oldTransactionHistory = state.transactionHistory;\n\n  const incomingTransactionHistory = {\n    id: v4(),\n    description: `Exchanged to ${destinationCurrency}`,\n    time: new Date().toLocaleTimeString(\"en-GB\"),\n    sourceAmount: sourceAmount,\n    destinationAmount: destinationAmount,\n    sourceCurrency: sourceCurrency,\n    destinationCurrency: destinationCurrency\n  };\n\n  return {\n    pockets: Object.assign({}, pockets, updatedSource, updatedDestination),\n    transactionHistory: [\n      ...oldTransactionHistory,\n      ...[incomingTransactionHistory]\n    ]\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.EXCHANGE_CURRENCY: {\n      return exchangeCurrency(state, action);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport ratesReducer from \"./ratesReducer\";\nimport pocketsReducer from \"./pocketReducer\";\n\nconst rootReducer = combineReducers({\n  ratesReducer,\n  pocketsReducer\n});\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}